---
  - hosts: staging
    environment:
      PYTHONPATH: /home/{{ ansible_user }}/.local/lib/python2.7/site-packages
    tasks:
      - name: Add docker gpg key
        become: true
        apt_key:
          id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present
      - name: Check if docker repository is present
        become: true
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
          state: present
      - name: Install docker CE
        become: true
        apt:
          name: docker-ce
          state: present
          update_cache: yes
      - name: Install pip
        become: true
        apt:
          name: python-pip
          state: present
          update_cache: yes
      - name: Install docker-py
        pip:
          name: docker
      - name: Install AWS CLI
        pip:
          name: awscli
      - name: Get ECR login credentials and login with Docker
        become: true
        shell: "$(/home/{{ ansible_user }}/.local/bin/aws ecr get-login --no-include-email --region ap-south-1)"
        environment:
          AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
          AWS_SECRET_ACCESS_KEY : "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
      - name: Create volume for docker
        become: true
        docker_volume:
          name: backend_logs
      - name: Run docker
        become: true
        docker_container:
          name: tracified-backend
          image: 453230908534.dkr.ecr.ap-south-1.amazonaws.com/tracified/tracified-backend-staging
          published_ports: "{{ lookup('env','BE_PORT') }}:{{ lookup('env','BE_PORT') }}"
          restart: yes
          state: started
          pull: yes
          env:
            BE_PORT: "{{ lookup('env','BE_PORT') }}"
            BE_MONGOLAB_URI: "{{ lookup('env','BE_MONGOLAB_URI') }}"
            BE_MONGOLAB_URI_TEST: "{{ lookup('env','BE_MONGOLAB_URI_TEST') }}"
            BE_JWT_SECRET: "{{ lookup('env','BE_JWT_SECRET') }}"
            BE_WORKFLOW_URI: "{{ lookup('env','BE_WORKFLOW_URI') }}"
            BE_CUSTGEN_URI: "{{ lookup('env','BE_CUSTGEN_URI') }}"
            BE_ECOMGEN_URI: "{{ lookup('env','BE_ECOMGEN_URI') }}"
            BE_DEFAULTTRACEABILITYPROFILEQUERYLIMIT: "{{ lookup('env','BE_DEFAULTTRACEABILITYPROFILEQUERYLIMIT') }}"
            BE_DEFAULTTRACEABILITYPROFILEQUERYPAGE: "{{ lookup('env','BE_DEFAULTTRACEABILITYPROFILEQUERYPAGE') }}"
          volumes:
            - backend_logs:/app/logs
# ---
#   - hosts: staging
#     environment:
#       PYTHONPATH: /home/{{ ansible_user }}/.local/lib/python2.7/site-packages
#     tasks:
#       - name: Add docker gpg key
#         become: true
#         apt_key:
#           id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
#           url: https://download.docker.com/linux/ubuntu/gpg
#           state: present
#       - name: Check if docker repository is present
#         become: true
#         apt_repository:
#           repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
#           state: present
#       - name: Install docker CE
#         become: true
#         apt:
#           name: docker-ce
#           state: present
#           update_cache: yes
#       - name: Install pip
#         become: true
#         apt:
#           name: python-pip
#           state: present
#           update_cache: yes
#       - name: Install docker-py
#         pip:
#           name: docker
#       - name: Install AWS CLI
#         pip:
#           name: awscli
#       - name: Get ECR login credentials and login with Docker
#         become: true
#         shell: "$(/home/{{ ansible_user }}/.local/bin/aws ecr get-login --no-include-email --region ap-south-1)"
#         environment:
#           AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#           AWS_SECRET_ACCESS_KEY : "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
#       - name: Create volume for docker
#         become: true
#         docker_volume:
#           name: backend_logs
#       - name: Run docker
#         become: true
#         docker_container:
#           # name: grammar
#           # image: 453230908534.dkr.ecr.ap-south-1.amazonaws.com/tracified/grammar
#           # restart: yes
#           # state: started
#           # pull: yes
#           name: tracified-backend
#           image: 453230908534.dkr.ecr.ap-south-1.amazonaws.com/tracified/tracified-backend-staging
#           published_ports: "{{ lookup('env','BE_PORT') }}:{{ lookup('env','BE_PORT') }}"
#           restart: yes
#           state: started
#           pull: yes
#           env:
#             BE_PORT: "{{ lookup('env','BE_PORT') }}"
#             BE_MONGOLAB_URI: "{{ lookup('env','BE_MONGOLAB_URI') }}"
#             BE_MONGOLAB_URI_TEST: "{{ lookup('env','BE_MONGOLAB_URI_TEST') }}"
#             BE_JWT_SECRET: "{{ lookup('env','BE_JWT_SECRET') }}"
#             BE_WORKFLOW_URI: "{{ lookup('env','BE_WORKFLOW_URI') }}"
#             BE_CUSTGEN_URI: "{{ lookup('env','BE_CUSTGEN_URI') }}"
#             BE_ECOMGEN_URI: "{{ lookup('env','BE_ECOMGEN_URI') }}"
#             BE_DEFAULTTRACEABILITYPROFILEQUERYLIMIT: "{{ lookup('env','BE_DEFAULTTRACEABILITYPROFILEQUERYLIMIT') }}"
#             BE_DEFAULTTRACEABILITYPROFILEQUERYPAGE: "{{ lookup('env','BE_DEFAULTTRACEABILITYPROFILEQUERYPAGE') }}"
#           volumes:
#             - backend_logs:/app/logs